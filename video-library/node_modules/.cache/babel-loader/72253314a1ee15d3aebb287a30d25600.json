{"ast":null,"code":"const videoDetails = allVideos.find(item => item.id === videoId);\n\nfunction checkIfPresentInPlaylist(playlistsArray, playlist, videoDetails) {\n  let selectedPlaylist = playlistsArray.find(item => item.listId === playlist.listId);\n  console.log(\"logging listVideos array...\", selectedPlaylist);\n  const videoObject = selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.listVideos.find(video => video.id === videoDetails.id);\n  console.log({\n    videoObject\n  });\n  return videoObject;\n}\n\nfunction addToPlaylistHandler(playlists, dispatch, playlist, videoDetails) {\n  const result = checkIfPresentInPlaylist(playlists, playlist, videoDetails);\n  console.log(\"this is result\", result);\n\n  if (!result) {\n    dispatch({\n      type: \"ADD_TO_PLAYLISTS\",\n      payload: {\n        videoDetails,\n        playlist\n      }\n    }); // dispatch({type:\"ADD_TO_PLAYLISTS\",payload:playlist})\n  }\n}\n\nexport default addToPlaylistHandler;","map":{"version":3,"sources":["C:/VideoLibrary/video-library/src/utils/addToPlayListHandler.js"],"names":["videoDetails","allVideos","find","item","id","videoId","checkIfPresentInPlaylist","playlistsArray","playlist","selectedPlaylist","listId","console","log","videoObject","listVideos","video","addToPlaylistHandler","playlists","dispatch","result","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,SAAS,CAACC,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,OAArC,CAArB;;AAEA,SAASC,wBAAT,CAAkCC,cAAlC,EAAkDC,QAAlD,EAA4DR,YAA5D,EAA0E;AACtE,MAAIS,gBAAgB,GAAGF,cAAc,CAACL,IAAf,CACpBC,IAAD,IAAUA,IAAI,CAACO,MAAL,KAAgBF,QAAQ,CAACE,MADd,CAAvB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,gBAA3C;AACA,QAAMI,WAAW,GAAGJ,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEK,UAAlB,CAA6BZ,IAA7B,CACjBa,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaJ,YAAY,CAACI,EADnB,CAApB;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,IAAAA;AAAF,GAAZ;AACA,SAAOA,WAAP;AACD;;AAED,SAASG,oBAAT,CAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDV,QAAnD,EAA6DR,YAA7D,EAA2E;AACzE,QAAMmB,MAAM,GAAGb,wBAAwB,CAACW,SAAD,EAAYT,QAAZ,EAAsBR,YAAtB,CAAvC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;;AACA,MAAI,CAACA,MAAL,EAAa;AACXD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAE;AAAErB,QAAAA,YAAF;AAAgBQ,QAAAA;AAAhB;AAArC,KAAD,CAAR,CADW,CAEX;AACD;AACF;;AACD,eAAeQ,oBAAf","sourcesContent":["const videoDetails = allVideos.find((item) => item.id === videoId);\r\n\r\nfunction checkIfPresentInPlaylist(playlistsArray, playlist, videoDetails) {\r\n    let selectedPlaylist = playlistsArray.find(\r\n      (item) => item.listId === playlist.listId\r\n    );\r\n  \r\n    console.log(\"logging listVideos array...\", selectedPlaylist);\r\n    const videoObject = selectedPlaylist?.listVideos.find(\r\n      (video) => video.id === videoDetails.id\r\n    );\r\n    console.log({ videoObject });\r\n    return videoObject;\r\n  }\r\n  \r\n  function addToPlaylistHandler(playlists, dispatch, playlist, videoDetails) {\r\n    const result = checkIfPresentInPlaylist(playlists, playlist, videoDetails);\r\n    console.log(\"this is result\", result);\r\n    if (!result) {\r\n      dispatch({ type: \"ADD_TO_PLAYLISTS\", payload: { videoDetails, playlist } });\r\n      // dispatch({type:\"ADD_TO_PLAYLISTS\",payload:playlist})\r\n    }\r\n  }\r\n  export default addToPlaylistHandler;\r\n  "]},"metadata":{},"sourceType":"module"}