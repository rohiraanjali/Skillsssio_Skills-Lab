{"ast":null,"code":"var _jsxFileName = \"C:\\\\VideoLibrary\\\\video-library\\\\src\\\\components\\\\PlaylistModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useVideo } from \"../contexts/VideoContext\";\nimport { v4 as uuidv4 } from 'uuid';\nimport addToPlayListHandler from \"../utils/addToPlayListHandler\";\nimport { checkingItem } from \"../utils/checkingItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserPlaylists = ({\n  videoDetails,\n  playlist\n}) => {\n  _s();\n\n  const {\n    state: {\n      playlists,\n      late\n    },\n    dispatch\n  } = useVideo();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: () => addToPlayListHandler(playlists, dispatch, playlist, videoDetails),\n        id: playlist.listId,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"black\"\n        },\n        htmlFor: playlist.listId,\n        children: playlist.listName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserPlaylists, \"WJKfc781MHKH6b1fujDgDCq/F+4=\", false, function () {\n  return [useVideo];\n});\n\n_c = UserPlaylists;\n\nconst PlaylistModal = ({\n  setDisplay,\n  display,\n  videoDetails\n}) => {\n  _s2();\n\n  const [playListName, setPlayListName] = React.useState(\"\");\n  const {\n    state: {\n      playlists\n    }\n  } = useVideo();\n\n  function createNewPlaylist(playListName) {\n    playlists.push({\n      listName: playListName,\n      listId: uuidv4(),\n      listVideos: []\n    });\n    setPlayListName(\" \");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlistModal-wrapper \",\n    style: {\n      display: display\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistModal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SAVE or ADD to Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"save to watch later or add to a playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistModal-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchLater\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => !checkingItem(laterVideos, videoId) ? dispatch({\n            type: \"ADD_TO_LATER_VIDEOS\",\n            payload: videoDetails\n          }) : null,\n          className: \"watchlater-checkbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"1.2rem\",\n            fontWeight: \"550\"\n          },\n          children: \"watch later\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"playlist-checkbox\",\n        children: playlists.map(playlist => {\n          return /*#__PURE__*/_jsxDEV(UserPlaylists, {\n            playlist: playlist,\n            videoDetails: videoDetails\n          }, playlist.listId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistModal-input\",\n        style: {\n          display: !display\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"playlistModal-inputBox\",\n          value: playListName,\n          onChange: e => setPlayListName(e.target.value),\n          type: \"text\",\n          placeholder: \"Add new playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: playListName === \"\",\n          onClick: () => createNewPlaylist(playListName),\n          className: \"plus-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-plus\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistModal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplay(\"none\"),\n        className: \"close-btn\",\n        id: \"closeMe\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplay(\"none\"),\n        className: \"add-btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PlaylistModal, \"chXZT1Gw7FnCEj0WLQyi/lovrk8=\", false, function () {\n  return [useVideo];\n});\n\n_c2 = PlaylistModal;\nexport default PlaylistModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserPlaylists\");\n$RefreshReg$(_c2, \"PlaylistModal\");","map":{"version":3,"sources":["C:/VideoLibrary/video-library/src/components/PlaylistModal.js"],"names":["React","useVideo","v4","uuidv4","addToPlayListHandler","checkingItem","UserPlaylists","videoDetails","playlist","state","playlists","late","dispatch","listId","color","listName","PlaylistModal","setDisplay","display","playListName","setPlayListName","useState","createNewPlaylist","push","listVideos","laterVideos","videoId","type","payload","fontSize","fontWeight","map","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {useVideo} from \"../contexts/VideoContext\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport addToPlayListHandler from \"../utils/addToPlayListHandler\"\r\nimport { checkingItem } from \"../utils/checkingItem\";\r\n\r\nconst UserPlaylists = ({videoDetails , playlist}) => {\r\n    const {\r\n        state: { playlists , late}\r\n        , dispatch\r\n    } = useVideo();\r\n    return (\r\n        <>\r\n        <li>\r\n        <input\r\n          onChange={() =>\r\n            addToPlayListHandler(playlists, dispatch, playlist, videoDetails)\r\n          }\r\n          id={playlist.listId}\r\n          type=\"checkbox\"\r\n        />\r\n      <label style={{color: \"black\"}} htmlFor={playlist.listId}>{playlist.listName}</label>\r\n      </li>\r\n      </>\r\n    );\r\n  };\r\n\r\nconst PlaylistModal = ({setDisplay , display , videoDetails}) => {\r\nconst [playListName , setPlayListName] = React.useState(\"\");\r\n\r\nconst {\r\n    state: { playlists }\r\n  } = useVideo();\r\n\r\n function createNewPlaylist(playListName) {\r\n    playlists.push({\r\n        listName: playListName,\r\n        listId: uuidv4(),\r\n        listVideos: []\r\n    })\r\n    setPlayListName(\" \");\r\n}\r\nreturn (\r\n    <div\r\n      className=\"playlistModal-wrapper \"\r\n      style={{display: display }}\r\n    >\r\n      <div className=\"playlistModal-header\">\r\n        <h2>SAVE or ADD to Playlist</h2>\r\n        <p>save to watch later or add to a playlist</p>\r\n      </div>\r\n      <div className=\"playlistModal-main\">\r\n          <div className=\"watchLater\">\r\n          <input \r\n           onChange={() =>\r\n            !checkingItem(laterVideos, videoId)\r\n              ? dispatch({ type: \"ADD_TO_LATER_VIDEOS\", payload: videoDetails })\r\n              : null\r\n          }\r\n          className=\"watchlater-checkbox\"\r\n          type=\"checkbox\"\r\n          />\r\n          <label style={{fontSize: \"1.2rem\" , fontWeight: \"550\"}}>watch later</label>\r\n          </div>\r\n         \r\n        <ul className=\"playlist-checkbox\">\r\n          {playlists.map((playlist) => {\r\n            return (\r\n              <UserPlaylists\r\n                playlist={playlist}\r\n                videoDetails={videoDetails}\r\n                key={playlist.listId}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        <div className=\"playlistModal-input\"\r\n          style={{display: !display}}\r\n        >\r\n          <input\r\n          className=\"playlistModal-inputBox\"\r\n            value={playListName}\r\n            onChange={(e) => setPlayListName(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Add new playlist\"\r\n          />\r\n\r\n          &nbsp;\r\n          <button\r\n            disabled={playListName === \"\"}\r\n            onClick={() => createNewPlaylist(playListName)}\r\n            className=\"plus-btn\"\r\n          >\r\n        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n            \r\n          </button>\r\n        \r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      <div className=\"playlistModal-footer\">\r\n        <button\r\n          onClick={() => setDisplay(\"none\")}\r\n          className=\"close-btn\"\r\n          id=\"closeMe\"\r\n        >\r\n          Close\r\n        </button>\r\n    &nbsp;\r\n    &nbsp;\r\n    &nbsp;\r\n        <button onClick={() => setDisplay(\"none\")} className=\"add-btn\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default PlaylistModal;"]},"metadata":{},"sourceType":"module"}